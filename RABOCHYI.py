# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã.
from config import BOT_TOKEN
import logging
from telegram.ext import Application, MessageHandler, filters, CommandHandler, ConversationHandler
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from random import randint
from random import choice
import sqlite3
from telegram.ext import ApplicationBuilder

proxy_url = "socks5://user:pass@host:port"

app = ApplicationBuilder().token("TOKEN").proxy_url(proxy_url).build()
from email.mime import application

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)

reply_keyboard = [['/genre', '/movie_details', '/actors'],
                  ['/facts', '/favorites', '/title'],
                  ['/GO']]
keyboard_FLAG = False
genre_FLAG = False
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)

genre_reply_keyboard = [['—Ñ—ç–Ω—Ç–µ–∑–∏', '—É–∂–∞—Å—ã', '–¥—Ä–∞–º–∞'], ['–¥–µ—Ç–µ–∫—Ç–∏–≤', '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–∫–æ–º–µ–¥–∏—è'],
                        ['–±–æ–µ–≤–∏–∫', '–±–∏–æ–≥—Ä–∞—Ñ–∏—è', '—Å–µ–º–µ–π–Ω—ã–π'],
                        ['–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π', '–º—É–ª—å—Ç—Ñ–∏–ª—å–º'], ['–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê', '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò', '–í–´–ë–†–ê–õ']]
# OBOZNACH = ['–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê', '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò', '–í–´–ë–†–ê–õ']
# oboznach_k = ReplyKeyboardMarkup(OBOZNACH, one_time_keyboard=False)

genre_markup = ReplyKeyboardMarkup(genre_reply_keyboard, one_time_keyboard=False)

COMMAND = []
Genre = []
Movie_deteils = []
Actors = []
# *******
Genre1 = []
Movie_deteils1 = []
Actors1 = []
nasmeshka = ["–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏, –µ—Å–ª–∏ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∏... —Ö–æ—Ç—è –ª–∞–¥–Ω–æ, –º–Ω–µ –Ω–∏–∫–æ–≥–¥–∞ –≤–∞—Å –Ω–µ –ø–æ–Ω—è—Ç—å",
             '–í—ã –∂–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∏...', '–í—ã —à—É—Ç–∏—Ç–µ —Ç–∞–∫?', '–Ø –ø—Ä–æ–º–æ–ª—á—É...']


# *******


async def start(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start"""
    COMMAND = []
    Genre = []
    Movie_deteils = []
    Actors = []
    # *******
    Genre1 = []
    Movie_deteils1 = []
    Actors1 = []
    otvet = []

    user = update.effective_user
    id_polz = user.mention_html()
    id_polz = id_polz.split('=')
    id_polz = str((''.join(id_polz[-1])).split('"')[0])
    id_polz = id_polz
    with open(f"{id_polz}_favorites.txt", "a"):
        pass
    await update.message.reply_html(
        rf"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –±–æ—Ç '–ü—è—Ç–Ω–∏—Ü–∞'. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –∫–∏–Ω–æ –∏ –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ –æ –Ω—ë–º. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ '/help'.",
    )


async def help_command(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text("""    –°–µ–π—á–∞—Å –æ–±—ä—è—Å–Ω—é –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–Ω–æ–π.

    –ö–æ–º–∞–Ω–¥–∞ '/genre', –¥–∞—ë—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –∂–∞–Ω—Ä—ã –∫–∏–Ω–æ.

    –° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã '/movie_details', —Ç—ã –º–æ–∂–µ—à—å —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ –∫–∏–Ω–æ (–≥–æ–Ω–∫–∏, —Å—É–ø–µ—Ä–≥–µ–æ–µ–≤ –∏ —Ç.–ø.).

    –ù–∞–ø–∏—Å–∞–≤ '/actors', —Ç—ã –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –∞–∫—Ç—ë—Ä–æ–≤, –∏–≥—Ä–∞–≤—à–∏–µ –≥–ª–∞–≤–Ω—ã–µ —Ä–æ–ª–∏ –≤ —Ñ–∏–ª—å–º–µ.

    –í–æ—Å–ø–æ–ª—å–∑—É—è—Å—å –∫–æ–º–∞–Ω–¥–æ–π '/remind', —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫–∏–Ω–æ.

    –ü–µ—Ä–µ–π—Ç–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ - '/favorites',

    –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ - '/adding_favorites',

    –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö - '/delete_favorites'.

    –¢—ã —Å–æ –º–Ω–æ–π –º–æ–∂–µ—à—å –≤–µ—Å—Ç–∏ –±–µ—Å–µ–¥—É —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –¥–ª—è –µ—ë –≤–∫–ª—é—á–µ–Ω–∏—è –Ω—É–∂–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '/keyboard', –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è '/close_keyboard'.

    –¢–∞–∫ –∂–µ —è –º–æ–≥—É —Ä—Å—Å–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ñ–∏–ª—å–º–∞—Ö, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∫–æ–º–∞–Ω–¥—É '/facts'

    –í—ã–±—ã—Ä–∞–π –∫–∏–Ω–æ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å.""")
    await update.message.reply_text("""    –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∫–∏–Ω–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '/title'""")
    await update.message.reply_text(
        "    –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∫–∏–Ω–æ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '/GO'",
        reply_markup=markup
    )


async def actors_command(update, context):
    global COMMAND
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text(
        '–£–∫–∞–∂–∏—Ç–µ –≥–ª–∞–≤–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ –∫–∏–Ω–æ',
        reply_markup=ReplyKeyboardRemove()
    )
    COMMAND.append('Actors')


async def genre_command(update, context):
    global keyboard_FLAG, COMMAND, genre_FLAG
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text(
        "–í–∏–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã –∫–∏–Ω–æ",
        reply_markup=genre_markup
    )
    COMMAND.append('Genre')
    # await update.message.reply_text(str(', '.join(COMMAND)))


async def movie_details_command(update, context):
    global COMMAND
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text(
        '–ó–∞–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –≤ –∫–∏–Ω–æ',
        reply_markup=ReplyKeyboardRemove()
    )
    COMMAND.append('Movie_deteils')


async def remind_command(update, contex):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text('—Ö–æ—Ä–æ—à–æ, –Ω–∞–ø–æ–º–Ω—é!ü´°')


async def favorites_command(update, contex):
    global COMMAND
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text('–°–µ–∫—É–Ω–¥–æ—á–∫—Éü§î‚Äç')
    user = update.effective_user
    id_polz = user.mention_html()
    id_polz = id_polz.split('=')
    id_polz = str((''.join(id_polz[-1])).split('"')[0])
    id_polz = id_polz
    with open(f'{id_polz}_favorites.txt', 'r') as fp:
        sp = fp.readlines()
    if not sp == []:
        for i in sp:
            Id = i[:-1]
            con = sqlite3.connect("cinema.db")
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
            cur = con.cursor()
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            result = cur.execute(f"""SELECT name FROM cinema_baza_dan WHERE id = {Id}""")
            three_results = cur.fetchmany(210)
            for u in three_results:
                for y in u:
                    if y[-1] == ' ':
                        y = y[:-1]
                    await update.message.reply_text(f'id: {Id} - "{y}"')
    else:
        await update.message.reply_text(f'–í –∏–∑–±—Ä–∞–Ω–Ω—ã–π –Ω–∏—á–µ–≥–æ –Ω–µ—ÇüòÖ')


async def adding_favorites_command(update, contex):
    global COMMAND
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text('–ü—Ä–∏—à–ª–∏ –º–Ω–µ id –∫–∏–Ω–æ, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ "–∏–∑–±—Ä–∞–Ω–Ω—ã–µ"')
    COMMAND.append('A_F')


async def delete_favorites_command(update, contex):
    global COMMAND
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text('–ü—Ä–∏—à–ª–∏ –º–Ω–µ id –∫–∏–Ω–æ, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ "–∏–∑–±—Ä–∞–Ω–Ω—ã–µ"')
    COMMAND.append('D_F')


async def keyboard(update, context):
    await update.message.reply_text(
        '–î–∏–∞–ª–æ–≥–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞',
        reply_markup=markup
    )


async def close_keyboard(update, context):
    await update.message.reply_text(
        '',
        reply_markup=ReplyKeyboardRemove()
    )


async def GO(update, context):
    global Genre, COMMAND, Movie_deteils, Actors, genre_FLAG, keyboard_FLAG, Genre1, Movie_deteils1, Actors1, otvet
    if not Actors == []:
        a = str(', '.join(Actors))
    else:
        a = '–ù–µ –≤—ã–±—Ä–∞–ª...'
    if not Genre == []:
        b = str(', '.join(Genre))
    else:
        b = '–ù–µ –≤—ã–±—Ä–∞–ª...'
    if not Movie_deteils == []:
        c = str(', '.join(Movie_deteils))
    else:
        c = '–ù–µ –≤—ã–±—Ä–∞–ª...'
    await update.message.reply_text(f'''–í—ã –≤—ã–±—Ä–∞–ª–∏:
–ê–∫—Ç—ë—Ä—ã: {a}
–ñ–∞–Ω—Ä: {b} 
–î–µ—Ç–∞–ª–∏: {c}''')
    await update.message.reply_text('–¢–∞–∫, –∞ —Å–µ–π—á–∞—Å –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –∫–∏–Ω–æ –ø–æ –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º)')
    otvet = []
    con = sqlite3.connect("cinema.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute(f"""SELECT * FROM cinema_baza_dan""")
    three_results = cur.fetchmany(210)
    for u in three_results:
        for i in Genre:
            if i in u[4] and u[4] not in otvet:
                otvet.append(u)
        for q in Actors:
            if q in u[7] and u[7] not in otvet:
                otvet.append(u)
        for q in Movie_deteils:
            if q in u[5] and u[5] not in otvet:
                otvet.append(u)
    await update.message.reply_text('–ú—ã –Ω–∞—à–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –≤–∞–º')
    await update.message.reply_text('üòä')
    if 100 < len(otvet) > 15:
        otvet = otvet[::-1]
        otvet = otvet[::-10]
        otvet = otvet[::-5]
        otvet = otvet[:14]
    elif 100 > len(otvet):
        otvet = otvet[::-19]
        otvet = otvet[::-40]
        otvet = otvet[::-35]
        otvet = otvet[:14]
    else:
        otvet = otvet[::-1]
        otvet = otvet[::-10]
        otvet = otvet[::-5]
    for u in otvet:
        await update.message.reply_text(str(u[1]))
    await update.message.reply_text('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /title')
    Actors = []
    Movie_deteils = []
    Genre = []


async def facts(update, contex):
    await update.message.reply_text('–ê –≤—ã –∑–Ω–∞–ª–∏?ü§î')
    with open('facts.txt', 'r', encoding="utf8") as fp:
        sp = fp.readlines()
    await update.message.reply_text(str(choice(sp)))


async def title(update, context):
    global COMMAND
    COMMAND.append('Title')
    await update.message.reply_text('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∏–Ω–æ, –∏ –µ—Å–ª–∏ —è –µ–≥–æ –Ω–∞–π–¥—É, —Ç–æ –ø—Ä–∏—à–ª—é –≤—Å—ë —á—Ç–æ –æ –Ω—ë–º —É–∑–Ω–∞—éüòä')


async def MOGHO(update, context):
    global Genre, COMMAND, Movie_deteils, Actors, genre_FLAG, keyboard_FLAG, Genre1, Movie_deteils1, Actors1, otvet
    if COMMAND[-1] == 'Title':
        name = str(update.message.text)
        cinema_po_nazvaniy = []
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        con = sqlite3.connect("cinema.db")
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
        cur = con.cursor()
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        result = cur.execute(f"""SELECT * FROM cinema_baza_dan""")
        three_results = cur.fetchmany(210)
        for i in three_results:
            if str(i[1]).lower().split() == name.lower().split():
                cinema_po_nazvaniy = i
                break
        if cinema_po_nazvaniy == []:
            await update.message.reply_text('–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à—ë–ª —ç—Ç–æ –∫–∏–Ω–æüòì')
        else:
            await update.message.reply_text('–ù–ê–®–Å–õ!')
            await update.message.reply_text(f'''id: {cinema_po_nazvaniy[0]}

–ù–∞–∑–≤–∞–Ω–∏–µ: {str(cinema_po_nazvaniy[1])}

–¢–∏–ø: {str(cinema_po_nazvaniy[2].lower())}

–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {str(cinema_po_nazvaniy[3])}

–ñ–∞–Ω—Ä: {str(cinema_po_nazvaniy[4])}

–û–ø–∏—Å–∞–Ω–∏–µ {str(cinema_po_nazvaniy[2].lower())}–∞: {str(cinema_po_nazvaniy[6])}

–ê–∫—Ç—ë—Ä—ã: {str(cinema_po_nazvaniy[7])}

–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–ª–µ—Ä: {str(cinema_po_nazvaniy[8])}

–°—Å—ã–ª–∫–∞ –Ω–∞ {str(cinema_po_nazvaniy[2].lower())}: {str(cinema_po_nazvaniy[9])}''')
    if COMMAND[-1] == 'A_F':
        ID = int(update.message.text)
        if ID >= 1 and ID <= 210:
            ID = str(ID)
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            user = update.effective_user
            id_polz = user.mention_html()
            id_polz = id_polz.split('=')
            id_polz = str((''.join(id_polz[-1])).split('"')[0])
            id_polz = id_polz
            with open(f'{id_polz}_favorites.txt', 'r') as fp:
                sp = fp.readlines()
            if str(ID) + '\n' not in sp:
                sp.append(str(ID) + '\n')
                user = update.effective_user
                with open(f'{id_polz}_favorites.txt', 'w') as fp:
                    for i in sp:
                        sps = fp.write(i)
                await update.message.reply_text(
                    f"–î–æ–±–∞–≤–∏–ª –∫–∏–Ω–æ —Å id {str(ID)} –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–æ–π '/favorites'")
            else:
                await update.message.reply_text(
                    f"–ö–∏–Ω–æ —Å id {str(ID)} —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–æ–π '/favorites'")
        else:
            await update.message.reply_text('–ù–ï–í–ï–ï–†–ù–´–ô IDüò°')
    if COMMAND[-1] == 'D_F':
        SPISOK_NEW = []
        ID_D = int(update.message.text)
        if ID_D >= 1 and ID_D <= 210:
            user = update.effective_user
            id_polz = user.mention_html()
            id_polz = id_polz.split('=')
            id_polz = str((''.join(id_polz[-1])).split('"')[0])
            id_polz = id_polz
            with open(f'{id_polz}_favorites.txt', 'r') as fp:
                sp = fp.readlines()
            if str(ID_D) + '\n' in sp:
                for i in sp:
                    if not int(i[:-1]) == ID_D:
                        SPISOK_NEW.append(i)
                user = update.effective_user
                with open(f'{id_polz}_favorites.txt', 'w') as fp:
                    for i in SPISOK_NEW:
                        sps = fp.write(i)
                await update.message.reply_text(
                    f"–£–¥–∞–ª–∏–ª –∫–∏–Ω–æ —Å id {str(ID_D)} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–æ–π '/favorites'")
            else:
                await update.message.reply_text(
                    f"–ö–∏–Ω–æ —Å id {str(ID_D)} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–π. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–æ–π '/favorites'")
        else:
            await update.message.reply_text('–ù–ï–í–ï–ï–†–ù–´–ô IDüò°')

    if update.message.text.upper() == '–í–´–ë–†–ê–õ':
        Genre = Genre1
        Movie_deteils = Movie_deteils1
        Actors = Actors1
        if COMMAND[-1] == 'Genre':
            if not Genre1 == []:
                await update.message.reply_text(
                    "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ –∂–∞–Ω—Ä —Å–≤–æ–µ–≥–æ –∫–∏–Ω–æ.",
                    reply_markup=markup
                )
            else:
                await update.message.reply_text(
                    nasmeshka[randint(0, 3)],
                    reply_markup=markup
                )
        elif COMMAND[-1] == 'Actors':
            if not Actors1 == []:
                await update.message.reply_text(
                    "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ –∞–∫—Ç—ë—Ä–æ–≤, –∏—Ä–∞—é—é—â–∏—Ö –≤ –≤–∞—à–µ–º –∫–∏–Ω–æ.",
                    reply_markup=markup
                )
            else:
                await update.message.reply_text(
                    nasmeshka[randint(0, 3)],
                    reply_markup=markup
                )
        else:
            if not Movie_deteils1 == []:
                await update.message.reply_text(
                    "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∫–∏–Ω–æ.",
                    reply_markup=markup
                )
            else:
                await update.message.reply_text(
                    nasmeshka[randint(0, 3)],
                    reply_markup=markup
                )
        if not Actors == []:
            a = str(', '.join(Actors))
        else:
            a = '–ù–µ –≤—ã–±—Ä–∞–ª...'
        if not Genre == []:
            b = str(', '.join(Genre))
        else:
            b = '–ù–µ –≤—ã–±—Ä–∞–ª...'
        if not Movie_deteils == []:
            c = str(', '.join(Movie_deteils))
        else:
            c = '–ù–µ –≤—ã–±—Ä–∞–ª...'
        await update.message.reply_text(f'''–í—ã –≤—ã–±—Ä–∞–ª–∏:
–ê–∫—Ç—ë—Ä—ã: {a}
–ñ–∞–Ω—Ä: {b} 
–î–µ—Ç–∞–ª–∏: {c}''')
    if not COMMAND[-1] == 'Title' and not COMMAND[-1] == 'A_F' and not COMMAND[-1] == 'D_F':
        if COMMAND[-1] == 'Actors':
            if update.message.text not in Actors1 and not (
                    update.message.text.upper() == '–í–´–ë–†–ê–õ' or update.message.text.upper() == '–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê' or update.message.text.upper() == '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò'):
                Actors1.append(update.message.text)
                a = '–í—ã –≤—ã–±—Ä–∞–ª–∏: ' + ', '.join(Actors1)
                await update.message.reply_text(str(a))
            elif update.message.text in Actors1:
                await update.message.reply_text('–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ —ç—Ç–æ–≥–æ –∞–∫—Ç—ë—Ä–∞')
        elif COMMAND[-1] == 'Genre':
            if update.message.text not in Genre1 and not (
                    update.message.text.upper() == '–í–´–ë–†–ê–õ' or update.message.text.upper() == '–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê' or update.message.text.upper() == '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò'):
                Genre1.append(update.message.text)
                a = '–í—ã –≤—ã–±—Ä–∞–ª–∏: ' + ', '.join(Genre1)
                await update.message.reply_text(str(a))
            elif update.message.text in Genre1:
                await update.message.reply_text('–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ —ç—Ç–æ—Ç –∂–∞–Ω—Ä')
        else:
            if update.message.text.lower() not in Movie_deteils1 and not (
                    update.message.text.upper() == '–í–´–ë–†–ê–õ' or update.message.text.upper() == '–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê' or update.message.text.upper() == '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò'):
                Movie_deteils1.append(update.message.text.lower())
                a = '–í—ã –≤—ã–±—Ä–∞–ª–∏: ' + ', '.join(Movie_deteils1)
                await update.message.reply_text(str(a))
            elif update.message.text in Movie_deteils1:
                await update.message.reply_text('–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ —ç—Ç—É –¥–µ—Ç–∞–ª—å')
        if update.message.text.upper() == '–°–ë–†–û–° –ü–ê–†–ê–ú–ï–¢–†–ê':
            if COMMAND[-1] == 'Genre':
                Genre = []
            elif COMMAND[-1] == 'Actors':
                Actors = []
            else:
                Movie_deteils = []
            await update.message.reply_text('–ü–∞—Ä–∞–º–µ—Ç—Ä —Å–±—Ä–æ—à–µ–Ω')
        if update.message.text.upper() == '–°–ë–†–û–°–ò–¢–¨ –ü–ê–†–ê–ú–ï–¢–† –ò –í–´–ô–¢–ò':
            if COMMAND[-1] == 'Genre':
                Genre1 = []
            elif COMMAND[-1] == 'Actors':
                Actors1 = []
            else:
                Movie_deteils1 = []
                await update.message.reply_text(
                    "–í—ã –≤—ã—à–ª–∏ –∏ —Å–±—Ä–æ—Å–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä",
                    reply_markup=markup
                )

    # –£ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ Updater –µ—Å—Ç—å –ø–æ–ª–µ message,
    # —è–≤–ª—è—é—â–µ–µ—Å—è –æ–±—ä–µ–∫—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è.
    # –£ message –µ—Å—Ç—å –ø–æ–ª–µ text, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è,
    # –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ reply_text(str),
    # –æ—Ç—Å—ã–ª–∞—é—â–∏–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    # -------------********************
    # await update.message.reply_text(update.message.text)
    # await update.message.reply_text(', '.join(COMMAND))
    # -------------********************


def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application.
    # –í–º–µ—Å—Ç–æ —Å–ª–æ–≤–∞ "TOKEN" –Ω–∞–¥–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather —Ç–æ–∫–µ–Ω
    application = Application.builder().token(BOT_TOKEN).build()
    # –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∏–ø–∞ filters.TEXT
    # –∏–∑ –æ–ø–∏—Å–∞–Ω–Ω–æ–π –≤—ã—à–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ echo()
    # –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    # —ç—Ç–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    # —Å —Ç–∏–ø–æ–º "—Ç–µ–∫—Å—Ç", —Ç. –µ. —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("genre", genre_command))
    application.add_handler(CommandHandler("movie_details", movie_details_command))
    application.add_handler(CommandHandler("actors", actors_command))
    application.add_handler(CommandHandler("remind", remind_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("favorites", favorites_command))
    application.add_handler(CommandHandler("adding_favorites", adding_favorites_command))
    application.add_handler(CommandHandler("delete_favorites", delete_favorites_command))
    application.add_handler(CommandHandler("keyboard", keyboard))
    application.add_handler(CommandHandler("close_keyboard", close_keyboard))
    application.add_handler(CommandHandler("GO", GO))
    application.add_handler(CommandHandler('title', title))
    application.add_handler(CommandHandler("facts", facts))
    text_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, MOGHO)
    application.add_handler(text_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()
